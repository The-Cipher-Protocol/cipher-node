package profile_manager

import (
	"fmt"

	"github.com/The-Cipher-Protocol/cipher-node/chain"
	"github.com/The-Cipher-Protocol/cipher-node/types"
	"github.com/The-Cipher-Protocol/cipher-node/utils/helper/common"
	"github.com/The-Cipher-Protocol/cipher-node/utils/helper/hex"
)

var (
	DefaultProfileContractBalance = "0x0" // Balance to pre-fund the reward contract
	ProfileContractAddress        = types.StringToAddress("0x000000000000000000000000000000000000FFf2")
	//nolint: lll
	ProfileContractBytecode = "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630b210bec1461003b5780638a11d7c914610057575b600080fd5b61005560048036038101906100509190610a10565b61008b565b005b610071600480360381019061006c919061099a565b6104d6565b604051610082959493929190610ba9565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca1e78196040518163ffffffff1660e01b815260040160006040518083038186803b1580156100f457600080fd5b505afa158015610108573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061013191906109c7565b90506000805b82518110156101aa573373ffffffffffffffffffffffffffffffffffffffff1683828151811061016a57610169610e5e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561019757600191506101aa565b80806101a290610db7565b915050610137565b50806101eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e290610c18565b60405180910390fd5b85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805190602001906102419291906107aa565b5084600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906102989291906107aa565b5083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190805190602001906102ef9291906107aa565b5082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030190805190602001906103469291906107aa565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632367f6b5336040518263ffffffff1660e01b81526004016103a09190610b8e565b60206040518083038186803b1580156103b857600080fd5b505afa1580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f09190610ae7565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055503373ffffffffffffffffffffffffffffffffffffffff167f1bd4d80fd2e4e4da9efe783a3b00f76128dadd1e2c808083ebb80bb9f2401fe687878787600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546040516104c6959493929190610ba9565b60405180910390a2505050505050565b606080606080600080600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461053990610d54565b80601f016020809104026020016040519081016040528092919081815260200182805461056590610d54565b80156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b505050505081526020016001820180546105cb90610d54565b80601f01602080910402602001604051908101604052809291908181526020018280546105f790610d54565b80156106445780601f1061061957610100808354040283529160200191610644565b820191906000526020600020905b81548152906001019060200180831161062757829003601f168201915b5050505050815260200160028201805461065d90610d54565b80601f016020809104026020016040519081016040528092919081815260200182805461068990610d54565b80156106d65780601f106106ab576101008083540402835291602001916106d6565b820191906000526020600020905b8154815290600101906020018083116106b957829003601f168201915b505050505081526020016003820180546106ef90610d54565b80601f016020809104026020016040519081016040528092919081815260200182805461071b90610d54565b80156107685780601f1061073d57610100808354040283529160200191610768565b820191906000526020600020905b81548152906001019060200180831161074b57829003601f168201915b50505050508152602001600482015481525050905080600001518160200151826040015183606001518460800151955095509550955095505091939590929450565b8280546107b690610d54565b90600052602060002090601f0160209004810192826107d8576000855561081f565b82601f106107f157805160ff191683800117855561081f565b8280016001018555821561081f579182015b8281111561081e578251825591602001919060010190610803565b5b50905061082c9190610830565b5090565b5b80821115610849576000816000905550600101610831565b5090565b600061086061085b84610c5d565b610c38565b9050808382526020820190508285602086028201111561088357610882610ec1565b5b60005b858110156108b357816108998882610914565b845260208401935060208301925050600181019050610886565b5050509392505050565b60006108d06108cb84610c89565b610c38565b9050828152602081018484840111156108ec576108eb610ec6565b5b6108f7848285610d12565b509392505050565b60008135905061090e81610f35565b92915050565b60008151905061092381610f35565b92915050565b600082601f83011261093e5761093d610ebc565b5b815161094e84826020860161084d565b91505092915050565b600082601f83011261096c5761096b610ebc565b5b813561097c8482602086016108bd565b91505092915050565b60008151905061099481610f4c565b92915050565b6000602082840312156109b0576109af610ed0565b5b60006109be848285016108ff565b91505092915050565b6000602082840312156109dd576109dc610ed0565b5b600082015167ffffffffffffffff8111156109fb576109fa610ecb565b5b610a0784828501610929565b91505092915050565b60008060008060808587031215610a2a57610a29610ed0565b5b600085013567ffffffffffffffff811115610a4857610a47610ecb565b5b610a5487828801610957565b945050602085013567ffffffffffffffff811115610a7557610a74610ecb565b5b610a8187828801610957565b935050604085013567ffffffffffffffff811115610aa257610aa1610ecb565b5b610aae87828801610957565b925050606085013567ffffffffffffffff811115610acf57610ace610ecb565b5b610adb87828801610957565b91505092959194509250565b600060208284031215610afd57610afc610ed0565b5b6000610b0b84828501610985565b91505092915050565b610b1d81610cd6565b82525050565b6000610b2e82610cba565b610b388185610cc5565b9350610b48818560208601610d21565b610b5181610ed5565b840191505092915050565b6000610b69602683610cc5565b9150610b7482610ee6565b604082019050919050565b610b8881610d08565b82525050565b6000602082019050610ba36000830184610b14565b92915050565b600060a0820190508181036000830152610bc38188610b23565b90508181036020830152610bd78187610b23565b90508181036040830152610beb8186610b23565b90508181036060830152610bff8185610b23565b9050610c0e6080830184610b7f565b9695505050505050565b60006020820190508181036000830152610c3181610b5c565b9050919050565b6000610c42610c53565b9050610c4e8282610d86565b919050565b6000604051905090565b600067ffffffffffffffff821115610c7857610c77610e8d565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ca457610ca3610e8d565b5b610cad82610ed5565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610ce182610ce8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d3f578082015181840152602081019050610d24565b83811115610d4e576000848401525b50505050565b60006002820490506001821680610d6c57607f821691505b60208210811415610d8057610d7f610e2f565b5b50919050565b610d8f82610ed5565b810181811067ffffffffffffffff82111715610dae57610dad610e8d565b5b80604052505050565b6000610dc282610d08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610df557610df4610e00565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f6e6c792076616c696461746f72732063616e2063616c6c207468697320667560008201527f6e6374696f6e0000000000000000000000000000000000000000000000000000602082015250565b610f3e81610cd6565b8114610f4957600080fd5b50565b610f5581610d08565b8114610f6057600080fd5b5056fea2646970667358221220e78e1a003d02dae7c81fec2e7e1d502a135724427b1baf33d785fcb5417774ab64736f6c63430008070033" // Truncated for brevity
)

// PredeployProfileContract predeploys the reward contract in the genesis block
func PredeployProfileContract() (*chain.GenesisAccount, error) {
	// Decode the bytecode
	scHex, err := hex.DecodeHex(ProfileContractBytecode)
	if err != nil {
		return nil, fmt.Errorf("unable to decode profile_manager contract bytecode: %w", err)
	}

	// Parse the default balance into a *big.Int
	bigDefaultBalance, err := common.ParseUint256orHex(&DefaultProfileContractBalance)
	if err != nil {
		return nil, fmt.Errorf("unable to parse profile_manager contract balance: %w", err)
	}

	// Create the genesis account for the profile_manager contract
	profileAccount := &chain.GenesisAccount{
		Code:    scHex,
		Balance: bigDefaultBalance,
	}

	// Return the pre-configured rewaprofile_managerrd contract account
	return profileAccount, nil
}
